using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.InputSystem;
using UnityEngine.UIElements;

public class PanelManagement : MonoBehaviour, IPointerDownHandler
{
    private RectTransform panelTransform; // Ссылка на компонент RectTransform панели
    private Vector2 initialPosition; // Исходная позиция панели
    private Vector2 targetPosition;

    private bool isMoving = false; // Флаг для отслеживания состояния перемещения
    private bool panelOriginalPosition = true;

    public Vector2 moveDistance = new Vector2(0, -100); // Расстояние, на которое нужно переместить панель

    private void Start()
    {
        panelTransform = GetComponent<RectTransform>(); // Получаем компонент RectTransform панели
        initialPosition = panelTransform.anchoredPosition; // Запоминаем исходную позицию панели
    }

    // Метод вызывается при нажатии на панель
    public void OnPointerDown(PointerEventData eventData)
    {
        if (!isMoving) // Проверяем, что панель не перемещается в данный момент
        {
            StartCoroutine(MovePanelSmoothly()); // Запускаем корутину для плавного перемещения
        }
    }

    private IEnumerator MovePanelSmoothly()
    {
        isMoving = true; // Устанавливаем флаг перемещения в true
        targetPosition = panelTransform.anchoredPosition == initialPosition ? initialPosition + moveDistance : initialPosition;
        //targetPosition = initialPosition + moveDistance; // Вычисляем целевую позицию
        float duration = 1.0f; // Длительность анимации в секундах (задайте желаемое значение)

        float elapsedTime = 0f;

        // Плавное перемещение панели от исходной позиции к целевой
        while (elapsedTime < duration)
        {
            // Интерполяция между исходной и целевой позицией с учетом времени
            panelTransform.anchoredPosition = Vector2.Lerp(initialPosition, targetPosition, elapsedTime / duration);
            elapsedTime += Time.deltaTime; // Увеличиваем прошедшее время
            yield return null; // Переходим к следующему кадру
        }

        panelTransform.anchoredPosition = targetPosition; // Устанавливаем окончательную позицию панели
        panelOriginalPosition = false;
        isMoving = false; // Сбрасываем флаг перемещения в false
    }

}
